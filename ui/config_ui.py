# ui/config_ui.py

import flet as ft
from config.config import load_config, save_config

def ConfigView():
    config = load_config()

    # C√°c tr∆∞·ªùng nh·∫≠p cho c·∫•u h√¨nh
    model_path_field = ft.TextField(
        label="üìÅ ƒê∆∞·ªùng d·∫´n YOLO Model",
        value=config.get("yolo_model_path", ""),
        width=500
    )

    counting_classes_field = ft.TextField(
        label="üî¢ C√°c class c·∫ßn ƒë·∫øm (c√°ch nhau b·∫±ng d·∫•u ph·∫©y)",
        value=",".join(config.get("counting_classes", [])),
        width=500
    )

    confidence_slider = ft.Slider(
        label="üéØ Confidence Threshold",
        min=0.1,
        max=1.0,
        divisions=9,
        value=config.get("confidence_threshold", 0.5),
        width=400,
        label="{value:.1f}"
    )

    roi_mode_dropdown = ft.Dropdown(
        label="üó∫Ô∏è Ch·∫ø ƒë·ªô ROI",
        value=config.get("roi_mode", "line"),
        options=[
            ft.dropdown.Option("line"),
            ft.dropdown.Option("zone")
        ],
        width=300
    )

    display_annotated_switch = ft.Switch(
        label="üñºÔ∏è Hi·ªÉn th·ªã Bounding Boxes",
        value=config.get("display_annotated", True)
    )

    save_csv_switch = ft.Switch(
        label="üíæ L∆∞u k·∫øt qu·∫£ v√†o CSV",
        value=config.get("save_csv", True)
    )

    display_fps_switch = ft.Switch(
        label="üìä Hi·ªÉn th·ªã FPS tr√™n video",
        value=config.get("display_fps", True)
    )

    status_text = ft.Text("", color=ft.colors.GREEN)

    def on_save_config(e):
        new_config = {
            "yolo_model_path": model_path_field.value,
            "counting_classes": [cls.strip() for cls in counting_classes_field.value.split(",") if cls.strip()],
            "confidence_threshold": confidence_slider.value,
            "roi_mode": roi_mode_dropdown.value,
            "display_annotated": display_annotated_switch.value,
            "save_csv": save_csv_switch.value,
            "display_fps": display_fps_switch.value
        }
        save_config(new_config)
        status_text.value = "‚úÖ C·∫•u h√¨nh ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!"
        status_text.color = ft.colors.GREEN
        status_text.update()

    return ft.Column(
        controls=[
            ft.Text("‚öôÔ∏è C·∫•u h√¨nh h·ªá th·ªëng", style="headlineSmall"),
            model_path_field,
            counting_classes_field,
            confidence_slider,
            roi_mode_dropdown,
            display_annotated_switch,
            save_csv_switch,
            display_fps_switch,
            ft.ElevatedButton("üíæ L∆∞u c·∫•u h√¨nh", icon=ft.icons.SAVE, on_click=on_save_config),
            status_text
        ],
        scroll=ft.ScrollMode.AUTO,
        expand=True,
        spacing=10
    )
